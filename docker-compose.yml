services:
  # Infrastructure Services
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: fitness_user_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root12345
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d fitness_user_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:8
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    container_name: keycloak
    command: start-dev
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8181
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "8181:8181"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8181/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Core Services  
  eureka:
    build: ./eureka
    container_name: eureka
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  config-server:
    build: ./configserver
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      eureka:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Business Services
  user-service:
    build: ./userservice
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fitness_user_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root12345
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  activity-service:
    build: ./activityservice
    container_name: activity-service
    ports:
      - "8082:8082"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      MONGODB_URL: mongodb://mongodb:27017
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-service:
    build: ./aiservice
    container_name: ai-service
    ports:
      - "8083:8083"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      MONGODB_URL: mongodb://mongodb:27017
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      GEMINI_API_URL: ${GEMINI_API_URL:-https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      user-service:
        condition: service_healthy
      activity-service:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8181/realms/fitness-oauth2/protocol/openid-connect/certs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build: ./fitness-app-frontend
    container_name: frontend
    ports:
      - "5173:80"
    depends_on:
      gateway:
        condition: service_healthy

volumes:
  postgres_data:
  mongodb_data:
  rabbitmq_data:

networks:
  default:
    name: fitness-network